#!/usr/bin/env bash
#
# Create MELODIC/NorNet Core Server in OpenStack
# Copyright (C) 2017-2023 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no


# ###### Write log information ##############################################
log ()
{
   echo -e "\x1b[34m`date +%FT%H:%M:%S`: $@\x1b[0m"
}


# ###### Call OpenStack command #############################################
call-openstack ()
{
   echo -e "\x1b[36m$ openstack $@\x1b[0m"
   p="$@"
   bash -c -- "openstack $p"
}


# ###### Call OpenStack command #############################################
call-openstack-quietly ()
{
   echo -e "\x1b[36m$ openstack $@\x1b[0m"
   openstack $@ >/dev/null 2>&1 || true
}



# ###########################################################################
# #### Main Program                                                      ####
# ###########################################################################

if [ $# -lt 3 ] ; then
   echo >&2 "Usage: $0 server_name flavor_name image_name [-hdd size_in_GiB|-ssd size_in_GiB] ..."
   exit 1
fi

SERVER_NAME="$1"
FLAVOR_NAME="$2"
IMAGE_NAME="$3"
shift ; shift ; shift

set -e


# ====== Create port ========================================================
portName="Port-${SERVER_NAME}"
log "Creating port $portName ..."
call-openstack-quietly port delete "$portName"
call-openstack port create "$portName" \
   --network nornet-simula \
   --disable-port-security --no-security-group

#    --enable-port-security --security-group SecurityGroup-NorNet-Internal
#    --disable-port-security --no-security-group
#    --fixed-ip subnet=ipv4-nornet-melodic-simula,ip-address=10.255.1.10 \
#    --fixed-ip subnet=ipv6-nornet-melodic-simula,ip-address=2001:700:4100:FF01:FFFF::a \


# ====== Create server ======================================================
call-openstack-quietly server delete "$SERVER_NAME"
call-openstack server create "$SERVER_NAME" \
   --flavor "\"$FLAVOR_NAME\"" \
   --image "$IMAGE_NAME" \
   --port "$portName" \
   --key-name mykey
# \
#   --wait

# ====== Obtain server ID ===================================================
unset id
eval `openstack server show "$SERVER_NAME" -f shell | grep "^id="`
serverID="$id"
if [ "$serverID" == "" ] ; then
   echo >&2 "ERROR: Unable to obtain server ID!"
   exit 1
fi
echo "ServerID=$serverID"


# ====== Add additional storage volume(s) ===================================
volumeNumber=1
while [ $# -gt 0 ] ; do
   ACTION="$1"
   shift

   # ====== Create storage volume ===========================================
   if [ "$ACTION" == "-sdd" -o "$ACTION" == "-hdd" ] ; then
      type="HDD"
      if [ "$ACTION" == "-sdd" ] ; then
         type="SSD"
      fi

      size="$1"
      shift

      volumeName="Volume-${SERVER_NAME}-Storage${volumeNumber}"
      log "Creating additional volume $volumeName ..."
      call-openstack-quietly volume delete "$volumeName"
      call-openstack volume create "$volumeName" \
         --size "$size" --type "NorNet-${type}" \
         --hint local_to_instance=$serverID
      call-openstack server add volume "$SERVER_NAME" "$volumeName"

      let volumeNumber=$volumeNumber+1

   else
      echo >&2 "ERROR: Invalid parameter $ACTION!"
   fi
done


# ====== Display the result =================================================
call-openstack server show "$SERVER_NAME"
call-openstack console url show "$SERVER_NAME"
