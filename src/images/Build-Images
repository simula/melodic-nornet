#!/usr/bin/env bash
#
# Ubuntu Template Image Builder
# Copyright (C) 2017-2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

if [ $# -lt 1 ] ; then
   echo >&2 "Usage: $0 configuration"
   exit 1
fi

# ------ Default settings ---------------------------------
DIRECTORY="."
PRESEEDS="MELODIC"
VARIANTS="bionic"

# ------ Default keyboard settings ------------------------
XKBMODEL="pc105"
XKBLAYOUT="de"
XKBVARIANT="nodeadkeys"
XKBOPTIONS=""

if [ ! -e "$1.config" ] ; then
   echo >&2 "ERROR: Cannot find $1.config!"
   exit 1
fi
. ./$1.config


# ====== Make template VMs ==================================================
for preseed in $PRESEEDS ; do
   if [ ! -e "${preseed}.preseed" ] ; then
      echo >&2 "ERROR: Cannot find ${preseed}.preseed!"
      exit 1
   fi

   for variant in $VARIANTS ; do
      mkdir -p "${preseed}-${variant}"

      (
         # ------ Customise preseed file ------------------------------------
         # BASE_LOCATION="http://no.archive.ubuntu.com/ubuntu/dists/"
         BASE_LOCATION="https://ftp.lysator.liu.se/ubuntu/"   # Use HTTPS!
         # Try to use "updates" variant first. This is not available for development versions.
         for extension in "-updates" "" ; do
            LOCATION="${BASE_LOCATION}/ubuntu/dists/${variant}${extension}/main/installer-amd64/"
            if wget -q --spider "${LOCATION}" ; then
               break
            fi
         done

         sed -e "s/xenial/${variant}/g" \
             -e "s/<SET_XKBMODEL_HERE>/$XKBMODEL/g" \
             -e "s/<SET_XKBLAYOUT_HERE>/$XKBLAYOUT/g" \
             -e "s/<SET_XKBVARIANT_HERE>/$XKBVARIANT/g" \
             -e "s/<SET_XKBOPTIONS_HERE>/$XKBOPTIONS/g" \
             -e "s/^d-i netcfg\/get_hostname.*\$/d-i netcfg\/get_hostname string ${variant}/g" \
             <${preseed}.preseed >${preseed}-${variant}/preseed.cfg

         if [ "${variant}" == "trusty" ] ; then
            # Trusty: No updates during installation. Kernels needs to be upgraded later manually.
            sed -e "s/^d-i pkgsel\/upgrade.*\$/d-i pkgsel\/upgrade select none/g" \
                -e "s/in-target true # <SET_POSTINSTALL_COMMANDS_HERE>.*\$/in-target apt-get install -y linux-generic-lts-xenial/g" \
                -i ${preseed}-${variant}/preseed.cfg
         elif [ "${variant}" == "xenial" ] ; then
            # Xenial: Use HWE kernel
            sed -e "s/^# d-i base-installer\/kernel\/override-image.*$/d-i base-installer\/kernel\/override-image string linux-generic-hwe-16.04/g" \
                -i ${preseed}-${variant}/preseed.cfg
         elif [ "${variant}" == "bionic" ] ; then
            # Xenial: Use HWE kernel
            sed -e "s/^# d-i base-installer\/kernel\/override-image.*$/d-i base-installer\/kernel\/override-image string linux-generic-hwe-18.04/g" \
                -i ${preseed}-${variant}/preseed.cfg
         fi


         # ------ Create disk image and VM ----------------------------------
         NAME="Ubuntu-${preseed}-`echo "${variant}" | sed  -e's/^\(.\)/\U\1/'`"
         IMAGE="${DIRECTORY}/${NAME}.qcow2"

         virsh destroy "${NAME}"          >/dev/null 2>&1
         virsh undefine --nvram "${NAME}" >/dev/null 2>&1
         rm -f "${IMAGE}"

         bootOptions=""   # "--boot uefi"
         osOptions="--os-type linux --os-variant ubuntu18.04"
         if [ "${variant}" == "trusty" -o "${variant}" == "xenial" ] ; then
            bootOptions=""
            osOptions="--os-type linux --os-variant ubuntu16.04"
         fi

         qemu-img create -f qcow2 -o size=8G ${IMAGE} && \
         virt-install \
            --quiet \
            --name "${NAME}" \
            --ram 4096 \
            --controller scsi,model=virtio-scsi \
            --disk "bus=scsi,path=${IMAGE},format=qcow2,cache=unsafe,discard=unmap" \
            --network bridge=virbr0,model=virtio \
            --vcpus 4 \
            --cpu host \
            --video virtio --channel spicevmc \
            ${bootOptions} \
            ${osOptions} \
            --location "$LOCATION" \
            --initrd-inject=${preseed}-${variant}/preseed.cfg \
            --extra-args "vga=792 priority=critical preseed/file=/preseed.cfg" \
            --noreboot

         # For serial console instead of graphics output:
         # --graphics none
         # --console pty,target_type=serial
         # --extra-args 'console=ttyS0 ...

         # Old-style interface naming:
         # --extra-args 'net.ifnames=0 biosdevname=0 vga=792 priority=critical file=preseed.cfg preseed/file=preseed.cfg' \

         # reset
         # clear

         # ------ Clean up --------------------------------------------------
         # virt-sysprep -a ${IMAGE}
      ) &
   done
done
wait
