#!/usr/bin/env bash
#
# Create MELODIC/NorNet Core Server in OpenStack
# Copyright (C) 2017-2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no


# ###### Write log information ##############################################
log ()
{
   echo -e "\x1b[34m`date +%FT%H:%M:%S`: $@\x1b[0m"
}


# ###### Call OpenStack command #############################################
call-openstack ()
{
   echo -e "\x1b[36m$ openstack $@\x1b[0m"
   p="$@"
   bash -c -- "openstack $p"
}


# ###### Call OpenStack command #############################################
call-openstack-quietly ()
{
   echo -e "\x1b[36m$ openstack $@\x1b[0m"
   openstack $@ >/dev/null 2>&1 || true
}



# ###########################################################################
# #### Main Program                                                      ####
# ###########################################################################

if [ $# -lt 1 ] ; then
   echo >&2 "Usage: $0 server_name"
   exit 1
fi

SERVER_NAME="$1"
shift

set -e


# ------ Get server ---------------------------------------------------------
unset id
unset volumes_attached
eval `openstack server show "$SERVER_NAME" -f shell`
serverID="$id"
if [ "$serverID" == "" ] ; then
   echo >&2 "ERROR: $SERVER_NAME not found!"
   exit 1
fi
echo "ServerID=$serverID"

ALL_VOLUME_IDS=""
for volume in $volumes_attached ; do
   unset id
   eval "$volume"
   volumeID="$id"
   echo "VolumeID=$volumeID"
   ALL_VOLUME_IDS="$ALL_VOLUME_IDS $volumeID"
done

# ------ Get ports ----------------------------------------------------------
ALL_PORT_IDS=""
ports=`openstack port list --server=$serverID -f value -c ID`
for portID in $ports ; do
   echo "PortID=$portID"
   ALL_PORT_IDS="$ALL_PORT_IDS $portID"
done


# ------ Delete server, volumes and ports -----------------------------------
call-openstack server delete "$serverID" --wait

# The rest can be done in parallel ("openstack" needs a long time to start ...)
for volumeID in $ALL_VOLUME_IDS ; do
   call-openstack volume delete "$volumeID" &
done
for portID in $ALL_PORT_IDS ; do
   call-openstack port delete "$portID" &
done
wait
